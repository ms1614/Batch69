JUNIT
--------------------
package org.sandip;

public class Calculator
{
public int square(int i)
{
	return i*i;
}
public int add(int i,int j)
{
	return i+j;
}
public int sub(int i,int j)
{
	return i-j;
}
public int mul(int i,int j)
{
	return i*j;
}
public int div(int i,int j)
{
	return i/j;
}
public String user(String name)
{
	return "sandip";
}

public String concat(String string1,String string2)
{
	return string1+string2;
}
}
-----------------------------------------------------------
package org.sandip;

import static org.junit.Assert.*;
import org.junit.Test;
public class CalculatorTest
{
Calculator ob=new Calculator();
@Test
public void testSquare()
{
	assertEquals(25,ob.square(5));
	assertEquals(36,ob.square(6));
	
}
@Test
public void testOpt()
{
	assertEquals(25,ob.add(12, 13));
	assertEquals(-1,ob.sub(12, 13));
	assertEquals(25,ob.mul(5, 5));
	assertEquals(5,ob.div(10, 2));
	
}
@Test
public void testString()
{
	String result=ob.concat("Hello ","student");
	assertEquals("Hello student",result);
}

@Test
public void testUser()
{
	assertEquals("sandip",ob.user("sandip"));

}
@Test
public void compString()
{
	String s1="Hello";
	String s2="Hello";
	assertSame(s1,s2);
}


}
----------------------------------------------------------------------------
Example-2
----------------------------
package org.sandip;
import static org.junit.Assert.*;
import org.junit.Test;
public class Test1 
{

	@Test
	public void testString()
	{
		String str1=new String("apple");
		String str2=new String("apple");
		String str3=null;
		String str4="apple";
		String str5="apple";
		int val1=5;
		int val2=6;
		String[] expectedArray = {"one","two","three"};
		String[] resultArray = {"one","two","three"};
		
		//to check two objects are equal
		assertEquals(str1,str2);
		//to check two values is true
				assertTrue(val1< val2);
		//to check two values is true
				assertFalse(val1> val2);
		//to check an object is null
				assertNull(str3);
		//to check an object is not null
				assertNotNull(str1);
		//to check if the 2 objects refence point to the same object
		assertSame(str4,str5);
		//to check if the 2 objects refence point to the same object
				assertNotSame(str1,str5);
		//to check if the 2 arrays are equal to each other
				assertArrayEquals(expectedArray,resultArray);
	}
}
--------------------------------------------------------------------------------------------------------------
@BeforeClass  ----This will execute for one time.

@Before
@Test-------
@After

@Before
@Test-------
@After

@Before
@Test-------
@After

@AfterClass ----This will execute for one time.

-----------------------------------------------------------------------------
package org.sandip;
import static org.junit.Assert.assertEquals;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
public class Test2 
{
	Calculator ob=new Calculator();
@BeforeClass
public static void beforeclassSetup() throws Exception
{
	System.out.println("before class");
}
@Before
public  void beforetestSetup() throws Exception
{
	System.out.println("before test");
}
@Test
public void sumTest()
{
	assertEquals(10,ob.sum(4, 6));
}

@Test
public void subTest()
{
	assertEquals(10,ob.sub(16, 6));
}

@AfterClass
public static void afterclassSetup() throws Exception
{
	System.out.println("after class");
}
@After
public  void aftertestSetup() throws Exception
{
	System.out.println("after test");
}

}



